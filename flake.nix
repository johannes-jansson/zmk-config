# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.6)
{
  # A helpful description of your flake
  description = "Flake for compiling ZMK firmware";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*.tar.gz";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*.tar.gz";

    mach-nix.url = "mach-nix/3.5.0";
  };

  # Flake outputs that other flakes can use
  outputs = { self, flake-schemas, nixpkgs, mach-nix }:
    let
      # Helpers for producing system-specific outputs
      supportedSystems = [ "x86_64-linux" "aarch64-darwin" "x86_64-darwin" "aarch64-linux" ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit system; };
      });
      requirementsFileList =  [ ./requirements.txt ];
      allRequirements = nixpkgs.lib.concatStrings (map (x: builtins.readFile x) requirementsFileList);

    in {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      # devShells = forEachSupportedSystem ({ pkgs }: 
      devShells = forEachSupportedSystem (system: 
      let 
        pkgs = import nixpkgs { inherit system; };
        zephyrSdk = import ./sdk.nix { inherit pkgs system; };
        pyEnv = mach-nix.lib.${ pkgs }.mkPython { requirements = allRequirements; };
      in {
        default = pkgs.mkShell {
          # buildInputs = with pkgs; [ cmake python39Full python39Packages.pip python39Packages.setuptools dtc git ninja gperf ccache dfu-util wget xz file gnumake gcc gcc_multi SDL2 pyEnv ];
          # Pinned packages available in the environment
          buildInputs = with pkgs; [ cmake python39Full python39Packages.pip python39Packages.setuptools dtc git ninja gperf ccache dfu-util wget xz file gnumake gcc gcc_multi SDL2  ];
          packages = with pkgs; [
            nixpkgs-fmt
          ];
        };
      });
    };
}
