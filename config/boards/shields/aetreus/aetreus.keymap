#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYM 1
#define SYS 2

#define _ &trans
#define xxx &none

#define sysesc &lt SYS ESC
#define symtab &lt SYM TAB
#define shbspc &mt LSHIFT BSPC
#define ctrret &mt LCTRL RET


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------------------------------------------------                     -------------------------------------------------------------
// | SYSESC  |    Q    |    W    |    E    |    R    |    T    |                     |    Y    |    U    |    I    |    O    |    P    |    \    |
// |---------|---------|---------|---------|---------|---------|                     |---------|---------|---------|---------|---------|---------|
// |   ESC   |    A    |    S    |    D    |    F    |    G    |                     |    H    |    J    |    K    |    L    |    ;    |    '    |
// ----------|---------|---------|---------|---------|---------|                     |---------|---------|---------|---------|---------|----------
//           |    Z    |    X    |    C    |    V    |    B    |                     |    N    |    M    |    ,    |    .    |    /    |
//           --------------------|---------|---------|---------|---------- ----------|---------|---------|---------|---------|----------
//                               |  NONE   |   GUI   | SYMTAB  |  BSPCS  | |  SPACE  |   RET   |  R ALT  |  NONE   |
//                               ----------------------------------------- -----------------------------------------
            bindings = <
    sysesc   &kp Q  &kp W  &kp E  &kp R     &kp T                     &kp Y   &kp U     &kp I     &kp O      &kp P      &kp BSLH
    &kp ESC  &kp A  &kp S  &kp D  &kp F     &kp G                     &kp H   &kp J     &kp K     &kp L      &kp SEMI   &kp SQT
    xxx      &kp Z  &kp X  &kp C  &kp V     &kp B                     &kp N   &kp M     &kp COMMA &kp DOT    &kp FSLH   xxx   
             xxx    xxx    xxx    &kp LGUI  symtab  shbspc  &kp SPACE ctrret  &kp RALT  xxx       xxx        xxx
            >;
        };

        sym_layer {
// 
// -------------------------------------------   -------------------------------------------
// |   `  |   !  |   @  |   {  |   }  |   &  |   |   *  |   7  |   8  |   9  |   +  |   =  |
// |------+------+------+------+------+-------   |------+------+------+------+------+------|
// |   ~  |   ^  |   $  |   (  |   )  |   '  |   |   ;  |   4  |   5  |   6  |   -  |   _  |
// -------+------+------+------+------+------|   |------+------+------+------+------+-------
//        |   #  |   %  |   [  |   ]  |   "  |   |   :  |   1  |   2  |   3  |   \  |
//        -------+------+------+------+------|   |------+------+------+------+-------
//               |      |      |      |      |   |      |      |   0  |      |
//               -----------------------------   -----------------------------
//  pipe missing 

            bindings = <
    &kp GRAV &kp Q      &kp W       &kp E     &kp R         &kp T             &kp Y     &kp U           &kp I     &kp O      &kp P      &kp BSLH
    &kp TILD &kp A      &kp S       &kp D     &kp F         &kp G             &kp H     &kp J           &kp K     &kp L      &kp SEMI   &kp SQT
    _        &kp Z      &kp X       &kp C     &kp V         &kp B             &kp N     &kp M           &kp COMMA &kp DOT    &kp FSLH   _     
    _        _          _           _         _             _                 _         _               &kp N0    _          _          _     
            >;
        };

        sys_layer {
            bindings = <
    _      &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP _             &bootloader       _        _        _      _         _      _     
    _      &kp C_PREV   &kp C_PP     &kp C_NEXT   &kp PSCRN     &bt BT_CLR        &kp LEFT &kp DOWN &kp UP &kp RIGHT _      _     
    _      _            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &out OUT_TOG      _        _        _      _         _      _     
    _      _            _            _            _             _                 _        _        _      _         _      _     
            >;
        };
    };
};
